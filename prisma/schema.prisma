datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  username       String    @unique
  email          String    @unique
  password       String
  profilePicture String?
  bio            String?
  role           Role      @default(Customer)
  rating         Float     @default(0.0)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  services       Service[]
  bookings       Booking[] @relation("CustomerBookings")
  reviews        Review[]
}

model Service {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  provider     User      @relation(fields: [providerId], references: [id])
  providerId   String    @db.ObjectId
  title        String
  description  String
  photos       String[]
  pricePerHour Float
  category     String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  bookings     Booking[]
  reviews      Review[]
}

model Booking {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  service    Service       @relation(fields: [serviceId], references: [id])
  serviceId  String        @db.ObjectId
  customer   User          @relation("CustomerBookings", fields: [customerId], references: [id])
  customerId String        @db.ObjectId
  startTime  DateTime
  endTime    DateTime
  status     BookingStatus
  rating     Float?
  review     String?
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  service   Service  @relation(fields: [serviceId], references: [id])
  serviceId String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  rating    Float
  comment   String
  timestamp DateTime @default(now())
}

enum Role {
  Customer
  ServiceProfessional
  Admin
}

enum BookingStatus {
  Pending
  Confirmed
  Cancelled
}
